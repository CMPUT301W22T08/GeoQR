apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin' //MAP API
//plugins {
//    id 'com.android.application'
//}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.geoqr"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions{
        unitTests.all{
            useJUnitPlatform()
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

task javadoc(type: Javadoc) {

    doFirst {
        configurations.implementation
                .filter { it.name.endsWith('.aar') }
                .each { aar ->
                    copy {
                        from zipTree(aar)
                        include "**/classes.jar"
                        into "$buildDir/tmp/aarsToJars/${aar.name.replace('.aar', '')}/"
                    }
                }
    }

    configurations.implementation.setCanBeResolved(true)
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.implementation
    classpath += fileTree(dir: "$buildDir/tmp/aarsToJars/")
    destinationDir = file("${project.buildDir}/outputs/javadoc/")
    failOnError false
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.journeyapps:zxing-android-embedded:4.1.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'com.google.firebase:firebase-firestore:24.0.2'
    implementation 'com.google.firebase:firebase-crashlytics-buildtools:2.8.1'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.google.android.libraries.places:places:2.4.0'

    testImplementation "org.junit.jupiter:junit-jupiter:5.8.2"
    testImplementation "junit:junit:4.13.2"

    androidTestImplementation 'org.testng:testng:6.9.6'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.google.code.gson:gson:2.8.9'
    androidTestImplementation 'com.jayway.android.robotium:robotium-solo:5.3.1'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'com.jayway.android.robotium:robotium-solo:5.3.1'

    implementation 'com.android.volley:volley:1.2.1'


    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:29.1.0')


    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics'


    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
    implementation 'com.github.yuriy-budiyev:code-scanner:2.1.2'

    // Add the dependencies for Map related features
    implementation 'com.google.android.gms:play-services-location:19.0.1'




}